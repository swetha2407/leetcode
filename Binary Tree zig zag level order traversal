class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        if(root==null){
            return res;
        }
        q.add(root);
        boolean isForward = true;
        while(!q.isEmpty()){  
             List<Integer> l = new ArrayList<Integer>(); 
            int size = q.size();  
            for(int i=0;i<size;i++){ 
                 TreeNode curr = q.poll(); 
                if(curr.left!=null){
                    q.add(curr.left);
                } 
                if(curr.right!=null){
                    q.add(curr.right);
                } 
                if(isForward){
                l.add(curr.val);
            } 
            else{
                l.add(0,curr.val);
            } 
            } 
            res.add(l);
            isForward = !isForward;
        } 
        return res;
    }
}
