class Solution {
    public int[] findMode(TreeNode root) {
        List<Integer> l = new ArrayList<Integer>();
        inorder(root,l);
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();
         for(int i=0;i<l.size();i++){
            if(!map.containsKey(l.get(i))){
                map.put(l.get(i),1);
            }
            else{
                map.put(l.get(i),map.get(l.get(i))+1);
            }
        }
        int max = maximum(map);
        List<Integer> res = new ArrayList<Integer>();
        for(int j:map.keySet()){
            if(map.get(j)==max){
                res.add(j);
            }
        }
        int [] arr = new int[res.size()];
        int k = 0;
        for(int i=0;i<res.size();i++){
            arr[k++] = res.get(i); 
        }
        return arr;
        
    }
    void inorder(TreeNode root,List<Integer> l){
        if(root==null){
            return;
        }
        inorder(root.left,l);
        l.add(root.val);
        inorder(root.right,l);
    }
    int maximum(Map<Integer,Integer> map){
        int m = 0;
        int ans = 0;
        for(int i:map.keySet()){
            if(map.get(i)>m){
                m = map.get(i);
            }
        }
        return m;
    }
}
