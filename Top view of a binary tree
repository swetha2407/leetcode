class Solution
{
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    static class pair{
        Node node;
        int hd;
        pair(Node node,int hd){
            this.node = node;
            this.hd = hd;
        }
    }
    static ArrayList<Integer> topView(Node root)
    {
        // add your code
        ArrayList<Integer> l = new ArrayList<Integer>();
        Queue<pair> q = new LinkedList<pair>();
        if(root==null){
            return l;
        }
        q.add(new pair(root,0));
        Map<Integer,Integer> map = new TreeMap<Integer,Integer>();
        while(!q.isEmpty()){
            pair temp = q.poll();
            Node node1 = temp.node;
            int hd = temp.hd;
            if(!map.containsKey(hd)){
                map.put(hd,node1.data);
            }
            if(node1.left!=null){
                q.add(new pair(node1.left,hd-1));
            }
            if(node1.right!=null){
                q.add(new pair(node1.right,hd+1));
            }
        }
        for(Map.Entry<Integer,Integer> entry:map.entrySet()){
            l.add(entry.getValue());
        }
        return l;
        
    }
}
