class Solution {
        List<Integer> l = new ArrayList<Integer>();
        void inorder(TreeNode root){
            if(root==null){
                return;
            }
            inorder(root.left);
            l.add(root.val);
            inorder(root.right);
        }
        TreeNode createBST(int low,int high){
            if(low>high){
                return null;
            }
            int mid = (low+high)/2;
            TreeNode left = createBST(low,mid-1);
            TreeNode right = createBST(mid+1,high);
            TreeNode node = new TreeNode(l.get(mid),left,right);
            return node;
        }
            public TreeNode balanceBST(TreeNode root) {
                TreeNode ans = null;
                if(root==null){
                    return ans;
                }
                inorder(root);
                ans = createBST(0,l.size()-1);
                return ans;
    }
}
